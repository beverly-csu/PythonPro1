# -*- coding: utf-8 -*-
""" Программа использует flask и запускает веб-сервер. 
При запросе к этому серверу он возвращает текст "Привет, Мир!" """
from flask import Flask
import sqlite3

conn = sqlite3.connect('Artistc.db', check_same_thread=False)
cursor = conn.cursor()

def index():
    """ Функция возвращает текст документа """
    cursor.execute('SELECT * FROM artists WHERE "Birth Year" = (?)', [year])
    data = cursor.fetchall()

    if len(data) == 0:
        return 'К сожалению таковых нет :('

    html = '<h3>Список художников, которые родились в' + str(year) + 'году</h3><ul>'
    for artist in data:
        html += '<li>' + artist[1] + '</li>'
    html += '</ul>'
    return html
    


# Создаём объект веб-приложения:
app = Flask(__name__)   # параметр - имя модуля для веб-приложения
                        # значение __name__ содержит корректное имя модуля для текущего файла 
                        # в нём будет значение "__main__", если модуль запускается непосредственно
                        # и другое имя, если модуль подключается

app.add_url_rule('/', 'index', index)   # создаёт правило для URL: 
                                        # при получении GET-запроса на адрес '/' на этом сайте
                                        # будет запускаться функция index (указана третьим параметром)
                                        # и её значение будет ответом на запрос.
                                        # Второй параметр - endpoint, "конечная точка", -
                                        # это строка, которая содержит имя данного правила. 
                                        # Обычно endpoint рекомендуют делать идентичным имени функции, 
                                        # но в сложных приложениях может быть несколько функций с одним именем в разных модулях, 
                                        # и для различения их в пределах всего сайта можно указывать разные endpoint.

if __name__ == "__main__":
    # Запускаем веб-сервер:
    year = int(input('Какого года?'))
    app.run() 
